trigger: none

resources:
  repositories:
    - repository: azure-sdk-tools
      type: github
      name: Azure/azure-sdk-tools
      endpoint: azure

jobs:
- template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml
  parameters:
    ServiceDirectory: keyvault
    EnvVars:
      AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)
      AZURE_CLIENT_ID: $(net-keyvault-azure-client-id)
      AZURE_CLIENT_SECRET: $(net-keyvault-azure-client-secret)
      AZURE_KEYVAULT_URL: $(net-keyvault-azure-keyvault-url)
      AZURE_KEYVAULT_TEST_MODE: Live

    PreSteps:
    - task: UsePythonVersion@0
      displayName: Use Python 3.x
      inputs:
        versionSpec: '3.x'
        architecture: x64

    - pwsh: |
        az --version
        az login --service-principal -u "$(net-keyvault-azure-client-id)" --password "$(net-keyvault-azure-client-secret)" --tenant "$(aad-azure-sdk-test-tenant-id)"
      displayName: Log into azure-cli

    - pwsh: |
        # Generate a name that should be <= 24 characters.
        $name = 'adpnet{0}-{1}-{2}' -f $(Build.BuildId), @{Linux='lnx'; MacOS='mac'; Windows='win'}['$(OSName)'], @{net461='net461'; 'netcoreapp2.1'='core21'}['$(TestTargetFramework)']
        Write-Host "Generated name: $name"

        # Create name and URL variables for subsequent steps.
        Write-Host "##vso[task.setvariable variable=net-keyvault-azure-keyvault-name]$name"
        Write-Host "##vso[task.setvariable variable=net-keyvault-azure-keyvault-url]https://$name.vault.azure.net"

        # Also overwrite the environment variable in case this is evaluated too late.
        Write-Host "##vso[task.setvariable variable=AZURE_KEYVAULT_URL]https://$name.vault.azure.net"
      displayName: Generate resource name

    - pwsh: |
        Write-Host "Creating resource group: $(net-keyvault-azure-keyvault-name)rg"
        az group create --name "$(net-keyvault-azure-keyvault-name)rg" --location westus --tags service-directory=keyvault test-resource=true
        az group wait --name "$(net-keyvault-azure-keyvault-name)rg"

        Write-Host "Creating key vault: $(net-keyvault-azure-keyvault-name)"
        az keyvault create --name "$(net-keyvault-azure-keyvault-name)" --resource-group "$(net-keyvault-azure-keyvault-name)rg" --location westus --enable-soft-delete --sku premium
      displayName: Create Key Vault

    - pwsh: >
        az keyvault set-policy --name "$(net-keyvault-azure-keyvault-name)" --resource-group "$(net-keyvault-azure-keyvault-name)rg" --spn "$(net-keyvault-azure-client-id)"
        --certificate-permissions backup create delete deleteissuers get getissuers import list listissuers managecontacts manageissuers purge recover restore setissuers update
        --key-permissions backup create decrypt delete encrypt get import list purge recover restore sign unwrapKey update verify wrapKey
        --secret-permissions backup delete get list purge recover restore set
      displayName: Set Key Vault permissions

    PostSteps:
    - pwsh: |
        az group delete --name "$(net-keyvault-azure-keyvault-name)rg" --yes
      displayName: Delete Key Vault
      condition: always()
